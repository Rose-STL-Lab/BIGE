apiVersion: v1
kind: Pod
metadata:
  namespace: spatiotemporal-decision-making
  name: bige-digital-coach
  labels:
    app: bige
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
            - key: nautilus.io/group
              operator: In
              values:
              - ry
  tolerations:
  - key: "nautilus.io/ry-reservation"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
  imagePullSecrets:
    - name: shubh-gitlab-registry
  containers:
  - name: bige-container
    image: gitlab-registry.nrp-nautilus.io/shmaheshwari/digital-coach-anwesh/bige:latest
    imagePullPolicy: Always
    ports:
    - containerPort: 8000
      protocol: TCP
    - containerPort: 8070
      protocol: TCP
    command: ["conda", "run", "-n", "T2M-GPT", "/bin/bash", "-c"]
    args:
    - |
      exec > >(tee /tmp/bige-startup.log) 2>&1
      # Update repositories to latest
      cd /UCSD-OpenCap-Fitness-Dataset
      git -c http.sslVerify=false pull origin main || echo "Failed to update dataset repo"


      # Build nimblephysics library
      echo "ðŸ”§ Building nimblephysics library..."
      cd /nimblephysics

      # Install the package
      echo "ðŸ”§ Installing nimblephysics package..."
      python setup.py install --force

      # Verify installation
      echo "ðŸ”§ Testing nimblephysics installation..."
      python -c "import nimblephysics as nimble; print('âœ… Nimblephysics imported successfully!')"

      cd /T2M-GPT
      git -c http.sslVerify=false pull origin main || echo "Failed to update main repo"

      # Link the data folder to the mounted data folder
      ln -sf /mnt/data/MCS_DATA/Data Data

      # Install any additional packages if needed
      pip install networkx tqdm

      # Hack for resolving cpp linkage issue with nimblephysics
      rm $CONDA_PREFIX/lib/libstdc++.so.6


      # Run the nimble demo
      echo "ðŸš€ Starting nimble-gui demo..."
      conda run -n T2M-GPT python demo/nimble-gui.py visualize | tee bige-demo.log &

      # Wait for service to start and show listening ports
      sleep 60
      echo "ðŸ“¡ Active listening ports:"
      lsof -i -P -n | grep LISTEN || echo "No listening ports found"

      # Keep container running and show logs
      echo "âœ… Service started. Keeping container alive..."
      # Run only for 6 hours for now
      sleep 20000

    env: 
    - name: SUBJECT_ID
      value: "05cd75b0-ea1d-4dda-84f3-503f48ffc85a"
    - name: PYTHONUNBUFFERED
      value: "1"

    volumeMounts:
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /mnt/data
      name: sports-analytics-database
    resources:
      limits:
        nvidia.com/gpu: "1"
        memory: "30Gi"
        cpu: "8"
      requests:
        nvidia.com/gpu: "1"
        memory: "20Gi"
        cpu: "4"
  volumes:
  - name: dshm
    emptyDir:
      medium: Memory
  - name: sports-analytics-database
    persistentVolumeClaim:
      claimName: sports-analytics-database
  restartPolicy: Never